{"version":3,"file":"static/js/161.995c91d9.chunk.js","mappings":"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","sources":["Components/Admin/Invoiceproduct.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Form, Modal, InputNumber, Button, Spin, message, Select } from \"antd\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\nimport { axiosInstancemain, baseURL } from \"../../Functions/axios\";\r\nimport toast from \"react-hot-toast\";\r\nimport style from \"../../Main.module.css\";\r\n\r\nconst InvoiceProduct = ({ onclose, setSelectedProducts, selectedProducts }) => {\r\n  const [form] = Form.useForm();\r\n  const [product, setProduct] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [currentProduct, setCurrentProduct] = useState({});\r\n  const [isEditing, setIsEditing] = useState(false); // Track editing state\r\n  const [type, settype] = useState(\"shop\");\r\n  const [customize, setCustomize] = useState([]);\r\n  const [flag, setflag] = useState(false);\r\n  const [viewportWidth, setViewportWidth] = useState(window.innerWidth);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setViewportWidth(window.innerWidth);\r\n    };\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchCategory = async () => {\r\n      try {\r\n        const { data } = await axiosInstancemain.get(\r\n          `/products/?category=${type}&is_paginated=${false}`,\r\n          {\r\n            headers: {\r\n              Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          }\r\n        );\r\n\r\n        if (data.length === 0) {\r\n          toast(\"No product available. Try adding products.\");\r\n          onclose();\r\n        }\r\n\r\n        setProduct(data?.message);\r\n      } catch (error) {\r\n        setProduct([]);\r\n        console.error(\"Failed to fetch products:\", error);\r\n        message.error(\"Failed to load products.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchCategory();\r\n  }, [onclose, type]);\r\n\r\n  useEffect(() => {\r\n    const fetchcus = async () => {\r\n      if (currentProduct.product_id) {\r\n        console.log(currentProduct);\r\n\r\n        try {\r\n          const customizationResponse = await axiosInstancemain.get(\r\n            `/customize/${currentProduct.product_id}/`\r\n          );\r\n\r\n          const customizationData = customizationResponse?.data?.message || [];\r\n          console.log(customizationData);\r\n\r\n          if (customizationData.length > 0) {\r\n            setCustomize(customizationData);\r\n          } else {\r\n            setCustomize([]);\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchcus();\r\n  }, [flag]);\r\n\r\n  const handleProductClick = (product) => {\r\n    setIsEditing(false); // Reset editing state\r\n    setCurrentProduct(product);\r\n    setIsModalOpen(true);\r\n    quantityRef.current?.focus();\r\n    form.setFieldsValue({\r\n      count: 1,\r\n\r\n      customize: \"\",\r\n      price: product.price,\r\n    });\r\n    setflag((e) => !e);\r\n  };\r\n\r\n  const handleEditClick = (product) => {\r\n    form.setFieldsValue({\r\n      count: product.count,\r\n      customize: product?.customize,\r\n      price: product.price,\r\n    });\r\n    quantityRef.current?.focus();\r\n    setIsEditing(true); // Set editing state\r\n    setCurrentProduct(product);\r\n    setIsModalOpen(true);\r\n    setflag((e) => !e);\r\n  };\r\n\r\n  const handleAddOrUpdateProduct = (values) => {\r\n    const { count, customize, price } = values;\r\n\r\n    if (isEditing) {\r\n      setSelectedProducts((prevSelectedProducts) =>\r\n        prevSelectedProducts.map((item) =>\r\n          item.id === currentProduct.id\r\n            ? { ...item, count, customize, price }\r\n            : item\r\n        )\r\n      );\r\n    } else {\r\n      // Add new product\r\n      setSelectedProducts((prevSelectedProducts) => [\r\n        ...prevSelectedProducts,\r\n        {\r\n          id: Date.now(),\r\n          product_id: currentProduct.product_id,\r\n          name: currentProduct.name,\r\n          image: currentProduct.image,\r\n          price,\r\n          count,\r\n          quantity: currentProduct?.quantity,\r\n\r\n          customize: customize ? customize : \"\",\r\n        },\r\n      ]);\r\n    }\r\n\r\n    setIsModalOpen(false);\r\n    setCurrentProduct({});\r\n  };\r\n\r\n  const handleChange = (value) => {};\r\n\r\n  const formRef = useRef(null); // Reference for the form\r\n  const quantityRef = useRef(null); // Reference for the quantity input\r\n  const customizeRef = useRef(null); // Reference for the customize select\r\n  const priceRef = useRef(null); // Reference for the price input\r\n\r\n  const handleKeyDown = (e, nextRef) => {\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n      nextRef?.current?.focus(); // Focus the next field\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={style.invoicepopup}>\r\n      <div className=\"text-end m-3\">\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            padding: \"10px\",\r\n          }}\r\n        >\r\n          <select\r\n            onChange={(e) => settype(e.target.value)}\r\n            className={style.customSelect}\r\n          >\r\n            <option value=\"shop\">Shop</option>\r\n            <option value=\"order\">Order</option>\r\n            <option value=\"combo\">Combo</option>\r\n          </select>\r\n\r\n          <FaTimes\r\n            onClick={onclose}\r\n            style={{ fontSize: \"28px\", cursor: \"pointer\", color: \"red\" }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {loading ? (\r\n        <div style={{ textAlign: \"center\", padding: \"20px\" }}>\r\n          <Spin size=\"large\" />\r\n          <p>Loading products...</p>\r\n        </div>\r\n      ) : (\r\n        <div\r\n          style={{\r\n            padding: \"10px\",\r\n            background: \"white\",\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            height: \"100vh\",\r\n          }}\r\n        >\r\n          <div\r\n            className={`col-8 col-md-8 col-xl-9 ${style.rmscroll}`}\r\n            style={{\r\n              display: \"flex\",\r\n              flexWrap: \"wrap\",\r\n              gap: \"20px\",\r\n              justifyContent: \"center\",\r\n              height: \"inherit\",\r\n              overflowY: \"auto\",\r\n            }}\r\n          >\r\n            {product.map((i) => (\r\n              <div\r\n                key={i.product_id}\r\n                className={style.withoutselectedProducts}\r\n                onClick={() => handleProductClick(i)}\r\n                style={{\r\n                  width: \"150px\",\r\n                  textAlign: \"center\",\r\n                  padding: \"12px\",\r\n                  gap: \"0\",\r\n                  cursor: \"pointer\",\r\n                  border: \"1px solid #f0f0f0\",\r\n                  borderRadius: \"8px\",\r\n                  height: \"250px\",\r\n                  boxShadow: \"1px 1px  #cbcdce\",\r\n                }}\r\n              >\r\n                <img\r\n                  style={{\r\n                    width: \"100%\",\r\n                    height: \"120px\",\r\n                    objectFit: \"contain\",\r\n                    marginBottom: \"8px\",\r\n                    borderRadius: \"6px\",\r\n                  }}\r\n                  src={baseURL + i.image}\r\n                  alt=\"product\"\r\n                />\r\n                <h3\r\n                  className={style.invoicepopupname}\r\n                  style={{\r\n                    fontSize: \"16px\",\r\n                    fontWeight: \"600\",\r\n                    color: \"#333\",\r\n                  }}\r\n                >\r\n                  {i.name}\r\n                </h3>\r\n                <h6> {i.quantity}</h6>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          {/* Selected Products */}\r\n\r\n          <div\r\n            className=\"col-4 col-md-4 col-xl-3\"\r\n            style={{\r\n              padding: \"20px\",\r\n              background: \"#f8f8f8\",\r\n              borderRadius: \"8px\",\r\n              height: \"inherit\",\r\n            }}\r\n          >\r\n            <h3\r\n              style={\r\n                viewportWidth < 500\r\n                  ? {\r\n                      marginBottom: \"16px\",\r\n                      color: \"#333\",\r\n                      textAlign: \"center\",\r\n                      fontSize: \"14px\",\r\n                    }\r\n                  : { marginBottom: \"16px\", color: \"#333\", textAlign: \"center\" }\r\n              }\r\n            >\r\n              Selected Products\r\n            </h3>\r\n            <div\r\n              style={{ overflowY: \"auto\", maxHeight: \"80%\" }}\r\n              className={style.rmscroll}\r\n            >\r\n              {selectedProducts.map((i) => (\r\n                <div\r\n                  style={\r\n                    viewportWidth < 500\r\n                      ? {\r\n                          background: \"#fff\",\r\n                          marginBottom: \"10px\",\r\n                          padding: \"10px\",\r\n                          borderRadius: \"6px\",\r\n                          boxShadow: \"0 1px 3px rgba(0,0,0,0.1)\",\r\n                          display: \"flex\",\r\n                          flexDirection: \"row\",\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"space-between\",\r\n                          cursor: \"pointer\",\r\n                          fontSize: \"10px\",\r\n                        }\r\n                      : {\r\n                          background: \"#fff\",\r\n                          marginBottom: \"10px\",\r\n                          padding: \"10px\",\r\n                          borderRadius: \"6px\",\r\n                          boxShadow: \"0 1px 3px rgba(0,0,0,0.1)\",\r\n                          display: \"flex\",\r\n                          flexDirection: \"row\",\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"space-between\",\r\n                          cursor: \"pointer\",\r\n                        }\r\n                  }\r\n                  onClick={() => handleEditClick(i)}\r\n                >\r\n                  <div key={i.id}>\r\n                    {i.name} {`(${i.quantity})`} x {i.count}{\" \"}\r\n                    {i.customize ? `- ${i.customize}` : \"\"}\r\n                  </div>\r\n                  <FaTimes\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      setSelectedProducts((prevSelectedProducts) =>\r\n                        prevSelectedProducts.filter(\r\n                          (product) => product.id !== i.id\r\n                        )\r\n                      );\r\n                    }}\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <h6\r\n              style={\r\n                viewportWidth < 500\r\n                  ? {\r\n                      color: \"#333\",\r\n                      textAlign: \"end\",\r\n                      fontSize: \"13px\",\r\n                      marginTop: \"22px\",\r\n                    }\r\n                  : { color: \"#333\", textAlign: \"end\", marginTop: \"22px\" }\r\n              }\r\n            >\r\n              Total:\r\n              {selectedProducts\r\n                .reduce((sum, product) => {\r\n                  return sum + product.count * product.price;\r\n                }, 0)\r\n                .toFixed(2)}\r\n            </h6>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Modal for Adding or Editing Product */}\r\n      <Modal\r\n        title={\r\n          isEditing\r\n            ? `Edit ${currentProduct?.name} (${currentProduct?.quantity})`\r\n            : `Customize ${currentProduct?.name} (${currentProduct?.quantity})`\r\n        }\r\n        visible={isModalOpen}\r\n        onCancel={() => (setIsModalOpen(false), setCurrentProduct({}))}\r\n        footer={null}\r\n      >\r\n        {currentProduct && (\r\n          <Form\r\n            layout=\"vertical\"\r\n            form={form}\r\n            onFinish={handleAddOrUpdateProduct}\r\n          >\r\n            <Form.Item\r\n              label=\"Quantity\"\r\n              name=\"count\"\r\n              rules={[{ required: true, message: \"Please enter a count\" }]}\r\n            >\r\n              <InputNumber\r\n                ref={quantityRef} // Focus reference\r\n                type=\"number\"\r\n                min={1}\r\n                style={{ width: \"100%\" }}\r\n                autoFocus // Focus on load\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Cutting size\" name=\"customize\">\r\n              <Select\r\n                style={{ width: \"100%\" }}\r\n                placeholder=\"Select a cutting size\"\r\n                ref={customizeRef}\r\n                onKeyDown={(e) => handleKeyDown(e, priceRef)}\r\n                onChange={handleChange} // Update state on selection\r\n              >\r\n                {customize.map((size) => (\r\n                  <Select.Option key={size.customization_id} value={size.name}>\r\n                    {size.name}\r\n                  </Select.Option>\r\n                ))}\r\n              </Select>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label=\"Price\"\r\n              name=\"price\"\r\n              rules={[{ required: true, message: \"Please enter a price\" }]}\r\n            >\r\n              <InputNumber\r\n                min={1}\r\n                type=\"number\"\r\n                style={{ width: \"100%\" }}\r\n                ref={priceRef}\r\n              />\r\n            </Form.Item>\r\n\r\n            <Button type=\"primary\" htmlType=\"submit\" block>\r\n              {isEditing ? \"Update Product\" : \"Add to Item\"}\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InvoiceProduct;\r\n"],"names":["_ref","onclose","setSelectedProducts","selectedProducts","form","Form","useForm","product","setProduct","useState","loading","setLoading","isModalOpen","setIsModalOpen","currentProduct","setCurrentProduct","isEditing","setIsEditing","type","settype","customize","setCustomize","flag","setflag","viewportWidth","setViewportWidth","window","innerWidth","useEffect","handleResize","addEventListener","removeEventListener","async","data","axiosInstancemain","get","headers","Authorization","localStorage","getItem","length","toast","message","error","console","fetchCategory","product_id","log","_customizationRespons","customizationResponse","customizationData","fetchcus","useRef","quantityRef","customizeRef","priceRef","_jsxs","className","style","invoicepopup","children","_jsx","display","alignItems","justifyContent","padding","onChange","e","target","value","customSelect","FaTimes","onClick","fontSize","cursor","color","textAlign","Spin","size","background","flexDirection","height","rmscroll","flexWrap","gap","overflowY","map","i","withoutselectedProducts","_quantityRef$current","current","focus","setFieldsValue","count","price","handleProductClick","width","border","borderRadius","boxShadow","objectFit","marginBottom","src","baseURL","image","alt","invoicepopupname","fontWeight","name","quantity","maxHeight","_quantityRef$current2","handleEditClick","id","stopPropagation","prevSelectedProducts","filter","marginTop","reduce","sum","toFixed","Modal","title","visible","onCancel","footer","layout","onFinish","values","item","Date","now","Item","label","rules","required","InputNumber","ref","min","autoFocus","Select","placeholder","onKeyDown","handleKeyDown","nextRef","_nextRef$current","key","preventDefault","Option","customization_id","Button","htmlType","block"],"sourceRoot":""}